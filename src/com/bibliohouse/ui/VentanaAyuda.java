/*
 * BiblioHouse - Un gestor de biblioteca personal.
 * Copyright (C) 2025 ferlagod
 *
 * Este programa es software libre: usted puede redistribuirlo y/o modificarlo
 * bajo los términos de la Licencia Pública General de GNU tal como se publica
 * por la Free Software Foundation, ya sea la versión 3 de la Licencia, o
 * (a su opción) cualquier versión posterior.
 *
 * Este programa se distribuye con la esperanza de que sea útil, pero
 * SIN NINGUNA GARANTÍA; sin siquiera la garantía implícita de
 * COMERCIABILIDAD o APTITUD PARA UN PROPÓSITO PARTICULAR. Vea la
 * Licencia Pública General de GNU para más detalles.
 *
 * Usted debería haber recibido una copia de la Licencia Pública General de GNU
 * junto con este programa. Si no es así, vea <https://www.gnu.org/licenses/>.
 */
package com.bibliohouse.ui;

/**
 * JDialog que muestra un manual de usuario básico para la aplicación
 * BiblioHouse.
 *
 * @author ferlagod
 * @version 0.2
 */
public class VentanaAyuda extends javax.swing.JDialog {

    /**
     * Crea una nueva instancia de VentanaAyuda.
     *
     * @param parent El JFrame padre desde el cual se lanza este diálogo.
     * @param modal Indica si el diálogo debe ser modal.
     */
    public VentanaAyuda(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();

        setResizable(false);
        setTitle("Ayuda - BiblioHouse");

        // Texto del Manual de Usuario
        String textoAyuda = """
        Bienvenido a BiblioHouse - Manual de Usuario
        
        ----------------------------------------------------------
        
        1. AÑADIR UN LIBRO
        
        - Manualmente: Rellena los campos del formulario en la primera pestaña y pulsa "Guardar Libro". Puedes añadir una imagen de portada con el botón "Seleccionar Imagen".
        
        - Desde OpenLibrary: Escribe un título o ISBN en el campo de búsqueda de OpenLibrary y pulsa "Buscar". Selecciona un libro de la tabla de resultados y pulsa "Añadir Libro Seleccionado".
        
        
        2. BUSCAR EN MI BIBLIOTECA
        
        - Usa la segunda pestaña para ver todos tus libros.
        - Para filtrar tu colección, selecciona un criterio (Título, Autor, etc.), escribe un término en el campo de texto y pulsa "Buscar".
        - Para ver de nuevo toda la biblioteca, borra el campo de búsqueda y pulsa "Buscar".
        
        
        3. EDITAR Y ELIMINAR LIBROS
        
        - En la pestaña "Buscar en mi Biblioteca", selecciona un libro de la tabla.
        - Pulsa "Editar Libro Seleccionado" para abrir una ventana y modificar sus datos.
        - Pulsa "Eliminar Libro Seleccionado" para borrarlo permanentemente (se pedirá confirmación).
        
        
        4. MENÚ ARCHIVO
        
        - Importar base de datos: Te permite reemplazar tu biblioteca actual con un archivo 'biblioteca.xml' guardado previamente.
        - Exportar base de datos: Guarda una copia de seguridad de tu 'biblioteca.xml' en la ubicación que elijas.
        
        
        5. MENÚ HERRAMIENTAS
        
        - Buscar duplicados: Analiza tu biblioteca y te muestra una lista de libros que podrían estar duplicados.
        - Configuración: Te permite elegir una carpeta por defecto para que el diálogo de "Exportar" se abra siempre ahí.
        
        """;

        txtAreaAyuda.setText(textoAyuda);
        txtAreaAyuda.setCaretPosition(0); // Muestra el scroll arriba del todo

        setLocationRelativeTo(parent);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        txtAreaAyuda = new javax.swing.JTextArea();
        btnClosedAyuda = new javax.swing.JButton();
        lblGpl = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        txtAreaAyuda.setEditable(false);
        txtAreaAyuda.setColumns(20);
        txtAreaAyuda.setRows(5);
        jScrollPane1.setViewportView(txtAreaAyuda);

        btnClosedAyuda.setText("Cerrar");
        btnClosedAyuda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClosedAyudaActionPerformed(evt);
            }
        });

        lblGpl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/gplv3.png"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 841, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(lblGpl, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnClosedAyuda)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnClosedAyuda)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblGpl, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)))
                .addGap(0, 12, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Cierra el diálogo cuando se hace clic en el botón "Cerrar".
     *
     * @param evt El evento de acción que desencadena este método.
     */
    private void btnClosedAyudaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClosedAyudaActionPerformed
        dispose();
    }//GEN-LAST:event_btnClosedAyudaActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClosedAyuda;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblGpl;
    private javax.swing.JTextArea txtAreaAyuda;
    // End of variables declaration//GEN-END:variables
}
