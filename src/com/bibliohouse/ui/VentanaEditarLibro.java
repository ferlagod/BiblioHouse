/*
 * BiblioHouse - Un gestor de biblioteca personal.
 * Copyright (C) 2025 ferlagod
 *
 * Este programa es software libre: usted puede redistribuirlo y/o modificarlo
 * bajo los términos de la Licencia Pública General de GNU tal como se publica
 * por la Free Software Foundation, ya sea la versión 3 de la Licencia, o
 * (a su opción) cualquier versión posterior.
 *
 * Este programa se distribuye con la esperanza de que sea útil, pero
 * SIN NINGUNA GARANTÍA; sin siquiera la garantía implícita de
 * COMERCIABILIDAD o APTITUD PARA UN PROPÓSITO PARTICULAR. Vea la
 * Licencia Pública General de GNU para más detalles.
 *
 * Usted debería haber recibido una copia de la Licencia Pública General de GNU
 * junto con este programa. Si no es así, vea <https://www.gnu.org/licenses/>.
 */
package com.bibliohouse.ui;

import com.bibliohouse.logic.Libro;
import java.awt.Image;
import java.io.File;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 * JDialog para editar la información de un libro en la aplicación BiblioHouse.
 *
 * @author ferlagod
 */
public class VentanaEditarLibro extends javax.swing.JDialog {

    private Libro libroAEditar;
    private boolean guardado = false;
    private String nuevaRutaImagen; // Para guardar la ruta si se cambia la imagen

    /**
     * Crea una nueva instancia de VentanaEditarLibro.
     *
     * @param parent El JFrame padre desde el cual se lanza este diálogo.
     * @param modal Indica si el diálogo debe ser modal.
     * @param libro El objeto Libro que se va a editar.
     */
    public VentanaEditarLibro(java.awt.Frame parent, boolean modal, Libro libro) {
        super(parent, modal);
        this.libroAEditar = libro;
        this.nuevaRutaImagen = libro.getPortadaURL();
        initComponents();

        setResizable(false);

        setTitle("Editar libros - BiblioHouse");

        // --- Rellenar el formulario con todos los datos del libro ---
        txtTitulo.setText(libro.getTitulo());
        txtAutor.setText(libro.getAutor());
        txtEditorial.setText(libro.getEditorial());
        txtGenero.setText(libro.getGenero());
        txtIsbn.setText(libro.getIsbn());

        mostrarPortada(libro.getPortadaURL());

        try {
            spinnerAnio.setValue(Integer.parseInt(libro.getAño()));
        } catch (NumberFormatException e) {
            spinnerAnio.setValue(java.time.LocalDate.now().getYear());
        }

        setLocationRelativeTo(parent);

    }

    /**
     * Muestra la imagen de la portada en el JLabel de vista previa.
     *
     * @param rutaImagen La ruta local de la imagen.
     */
    private void mostrarPortada(String rutaImagen) {
        if (rutaImagen != null && !rutaImagen.isEmpty()) {
            ImageIcon iconoOriginal = new ImageIcon(rutaImagen);
            Image imagenOriginal = iconoOriginal.getImage();
            Image imagenRedimensionada = imagenOriginal.getScaledInstance(150, 200, Image.SCALE_SMOOTH);
            lblPortadaPreview.setIcon(new ImageIcon(imagenRedimensionada));
        } else {
            lblPortadaPreview.setIcon(null);
        }
    }

    /**
     * Devuelve el libro con los datos actualizados del formulario.
     *
     * @return El objeto Libro editado.
     */
    public Libro getLibroEditado() {
        libroAEditar.setTitulo(txtTitulo.getText().trim());
        libroAEditar.setAutor(txtAutor.getText().trim());
        libroAEditar.setEditorial(txtEditorial.getText().trim());
        libroAEditar.setGenero(txtGenero.getText().trim());
        libroAEditar.setIsbn(txtIsbn.getText().trim());
        libroAEditar.setAño(spinnerAnio.getValue().toString());
        libroAEditar.setPortadaURL(this.nuevaRutaImagen); // Asigna la nueva ruta de la imagen

        return libroAEditar;
    }

    /**
     * Indica si el usuario pulsó "Guardar Cambios".
     *
     * @return true si el usuario guardó los cambios, false en caso contrario.
     */
    public boolean fueGuardado() {
        return guardado;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitulo = new javax.swing.JLabel();
        lblAutor = new javax.swing.JLabel();
        lblEditorial = new javax.swing.JLabel();
        lblAnio = new javax.swing.JLabel();
        lblGenero = new javax.swing.JLabel();
        lblIsbn = new javax.swing.JLabel();
        btnGuardarCambios = new javax.swing.JButton();
        txtTitulo = new javax.swing.JTextField();
        txtAutor = new javax.swing.JTextField();
        txtEditorial = new javax.swing.JTextField();
        txtGenero = new javax.swing.JTextField();
        lblPortadaPreview = new javax.swing.JLabel();
        txtIsbn = new javax.swing.JTextField();
        spinnerAnio = new javax.swing.JSpinner();
        btnCancelar = new javax.swing.JButton();
        btnSeleccionarImagen = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        lblTitulo.setText("Título:");

        lblAutor.setText("Autor:");

        lblEditorial.setText("Editorial:");

        lblAnio.setText("Año:");

        lblGenero.setText("Género:");

        lblIsbn.setText("ISBN:");

        btnGuardarCambios.setText("Guardar libro");
        btnGuardarCambios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarCambiosActionPerformed(evt);
            }
        });

        lblPortadaPreview.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblPortadaPreview.setPreferredSize(new java.awt.Dimension(150, 200));

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnSeleccionarImagen.setText("Seleccionar imagen...");
        btnSeleccionarImagen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSeleccionarImagenActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnGuardarCambios)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 488, Short.MAX_VALUE)
                        .addComponent(btnCancelar))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnSeleccionarImagen)
                            .addComponent(lblPortadaPreview, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(54, 54, 54))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(lblAnio)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(lblGenero, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblEditorial, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblAutor, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblTitulo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGap(33, 33, 33)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(spinnerAnio, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(lblIsbn)
                            .addGap(18, 18, 18)
                            .addComponent(txtIsbn, javax.swing.GroupLayout.DEFAULT_SIZE, 239, Short.MAX_VALUE))
                        .addComponent(txtGenero, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtEditorial, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtAutor, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtTitulo, javax.swing.GroupLayout.Alignment.LEADING))
                    .addContainerGap(242, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(lblPortadaPreview, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnSeleccionarImagen)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGuardarCambios)
                    .addComponent(btnCancelar))
                .addGap(32, 32, 32))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(25, 25, 25)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblTitulo)
                        .addComponent(txtTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(31, 31, 31)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblAutor)
                        .addComponent(txtAutor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(31, 31, 31)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblEditorial)
                        .addComponent(txtEditorial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(31, 31, 31)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblGenero)
                        .addComponent(txtGenero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(31, 31, 31)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblAnio)
                        .addComponent(spinnerAnio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblIsbn)
                        .addComponent(txtIsbn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap(123, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Establece el estado de guardado a true y cierra la ventana.
     *
     * @param evt El evento de acción que desencadena este método.
     */
    private void btnGuardarCambiosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarCambiosActionPerformed
        if (txtTitulo.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "El campo 'Título' no puede estar vacío.", "Error de Validación", JOptionPane.ERROR_MESSAGE);
            return;
        }
        this.guardado = true;
        this.dispose();
    }

    /**
     * Método de ayuda para limpiar todos los campos del formulario.
     */
    private void limpiarFormulario() {
        txtTitulo.setText("");
        txtAutor.setText("");
        txtEditorial.setText("");
        txtGenero.setText("");
        txtIsbn.setText("");
        spinnerAnio.setValue(java.time.LocalDate.now().getYear()); // Pone el año actual
        lblPortadaPreview.setIcon(null); // Quita la imagen de la vista previa
    }//GEN-LAST:event_btnGuardarCambiosActionPerformed

    /**
     * Establece el estado de guardado a false y cierra la ventana.
     *
     * @param evt El evento de acción que desencadena este método.
     */
    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        this.guardado = false;
        this.dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    /**
     * Maneja la acción de seleccionar una imagen para la portada del libro.
     * Abre un diálogo de selección de archivos para que el usuario pueda elegir
     * una imagen.
     *
     * @param evt El evento de acción que desencadena este método.
     */
    private void btnSeleccionarImagenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSeleccionarImagenActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileFilter(new FileNameExtensionFilter("Imágenes (jpg, png, gif)", "jpg", "png", "gif"));

        if (fileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            File archivo = fileChooser.getSelectedFile();
            this.nuevaRutaImagen = archivo.getAbsolutePath(); // Guardamos la nueva ruta
            mostrarPortada(this.nuevaRutaImagen); // Y actualizamos la vista previa
        }
    }//GEN-LAST:event_btnSeleccionarImagenActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnGuardarCambios;
    private javax.swing.JButton btnSeleccionarImagen;
    private javax.swing.JLabel lblAnio;
    private javax.swing.JLabel lblAutor;
    private javax.swing.JLabel lblEditorial;
    private javax.swing.JLabel lblGenero;
    private javax.swing.JLabel lblIsbn;
    private javax.swing.JLabel lblPortadaPreview;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JSpinner spinnerAnio;
    private javax.swing.JTextField txtAutor;
    private javax.swing.JTextField txtEditorial;
    private javax.swing.JTextField txtGenero;
    private javax.swing.JTextField txtIsbn;
    private javax.swing.JTextField txtTitulo;
    // End of variables declaration//GEN-END:variables
}
